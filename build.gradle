plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "1.5.0"
    id 'jacoco'
    id 'pmd'
    id 'checkstyle'
    id "com.github.spotbugs" version "4.5.1"
    id "org.owasp.dependencycheck" version "6.1.6"
    id 'com.diffplug.spotless' version "5.13.0"
}

version = "0.1"
group = "com.project"

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = '8.31'
    configDirectory = file("config/checkstyle")
    checkstyleTest.enabled = false
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.project.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.swagger.core.v3:swagger-annotations:2.1.9")
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation("io.micronaut.flyway:micronaut-flyway")
    runtimeOnly("ch.qos.logback:logback-classic")

    implementation("com.aerospike:aerospike-client:5.0.0")

    implementation("io.micronaut:micronaut-validation")
    runtimeOnly("com.oracle.database.jdbc:ojdbc8")
    implementation("io.micronaut.data:micronaut-data-jdbc:2.4.4")
    annotationProcessor("io.micronaut.data:micronaut-data-processor:2.4.4")

    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    compileOnly("jakarta.persistence:jakarta.persistence-api:2.2.2")

    testImplementation "org.mockito:mockito-core:2.1.0"
    testImplementation "org.mockito:mockito-junit-jupiter:2.23.0"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5:2.3.6")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    annotationProcessor("io.micronaut.openapi:micronaut-openapi:2.5.0")
    annotationProcessor("io.micronaut:micronaut-inject-java")
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        html.enabled true
    }
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['com/project/models/**',
                                'com/project/Application**']
            )
        }))
    }
}

pmd {
    ignoreFailures = false
    toolVersion = "6.21.0"
    ruleSets = ["config/pmd/pmd-ruleset.xml"]
}

application {
    mainClass.set("com.project.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

check.dependsOn dependencyCheckAnalyze
dependencyCheck {

    failBuildOnCVSS = 7
    // Add a suppression file once there are known issues
    //suppressionFile = 'config/dependency-check/dependency-check-known-issues.xml'
}

spotless {
    java {
        importOrder()

        removeUnusedImports()

        googleJavaFormat()
    }
}

spotbugsMain {
    onlyAnalyze = [ 'com.project.*' ]
    reports {
        xml.enabled = false
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(build)) {
        spotbugsMain.enabled = true
        pmdTest.enabled = false
        spotbugsTest.enabled = false
    }
}


